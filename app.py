# -*- coding: utf-8 -*-
"""sys.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_8C7epoElXI02dznLtYuPiiA9IBwCXt8
"""

app_code = """
import streamlit as st
import polars as pl
import numpy as np
import pickle
import scipy.sparse as sp

# --- Load saved artifacts ---
users = pl.read_parquet("users.parquet")
items = pl.read_parquet("items.parquet")
item_features = pl.read_parquet("item_features.parquet")
UI_csr = sp.load_npz("user_item_csr.npz")

with open("als_model.pkl", "rb") as f:
    als = pickle.load(f)

# --- Mappings ---
user_id_to_idx = dict(zip(users["user_id"].to_numpy(), users["user_idx"].to_numpy()))
item_idx_to_id = dict(zip(items["item_idx"].to_numpy(), items["item_id"].to_numpy()))

# --- Recommend function ---
def recommend_cf(user_raw_id, N=10):
    if user_raw_id not in user_id_to_idx:
        return pl.DataFrame({"itemid":[], "score":[]})
    uidx = user_id_to_idx[user_raw_id]
    ids, scores = als.recommend(uidx, UI_csr[uidx], N=N, recalculate_user=True)
    return pl.DataFrame({"itemid":[item_idx_to_id[i] for i in ids], "score":scores})

# --- Streamlit UI ---
st.title("üì¶ Recommender System Demo")

user_input = st.text_input("Enter User ID:", value=str(users["user_id"][0]))
method = st.selectbox("Choose Recommendation Method:", ["Collaborative Filtering"])
top_n = st.slider("Number of Recommendations:", 5, 20, 10)

if st.button("Get Recommendations"):
    try:
        user_id = int(user_input)
        recs = recommend_cf(user_id, N=top_n)
        if recs.is_empty():
            st.warning("‚ö†Ô∏è No recommendations found for this user.")
        else:
            st.dataframe(recs.to_pandas())
    except ValueError:
        st.error("‚ùå Please enter a valid numeric User ID.")
"""

# Save to app.py
with open("app.py", "w") as f:
    f.write(app_code)

print("‚úÖ app.py created!")